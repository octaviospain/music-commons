plugins {
    id 'com.palantir.git-version' version '0.15.0'
}

group 'net.transgressoft'
version gitVersion()

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    dependencies {
        implementation 'net.transgressoft:soft-query-api:0.18'
    }

    repositories {
        mavenCentral()
        maven {
            url "http://nexus.pipon.xxx/repository/maven-public/"
            allowInsecureProtocol = true
        }
    }

    plugins.withType(JacocoPlugin) {
        tasks["test"].finalizedBy 'jacocoTestReport'
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

//tasks.withType(JavaCompile) {
//    options.compilerArgs += '--enable-preview'
//}
//tasks.withType(Test) {
//    jvmArgs += "--enable-preview"
//}
}

project('music-commons-api') {

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_16
        targetCompatibility = JavaVersion.VERSION_16
    }
}

project('music-commons-core') {

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_16
        targetCompatibility = JavaVersion.VERSION_16
    }

    configurations {
        spi
    }

    task spiJar(type: Jar) {
        archiveBaseName = 'music-commons-core-spi'
        from sourceSets.main.output
        include('com/transgressoft/music/**')
    }

    artifacts {
        spi spiJar
    }

    dependencies {
        api project(path: ':music-commons-api')
    }
}
