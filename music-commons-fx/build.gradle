plugins {
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

description = 'Transgressoft Music Commons - JavaFX'

javafx {
    version = JavaVersion.VERSION_17
    modules = ['javafx.controls']
}

tasks.register('runWaveformPaneDemo', JavaExec) {
    group = "Execution"
    description = "Run WaveformPaneDemo"
    classpath = sourceSets.test.runtimeClasspath
    mainClass = "net.transgressoft.commons.fx.music.waveform.WaveformPaneDemo"
}

test {
    useJUnitPlatform()

    jvmArgs = [
            '--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED',
            '--add-exports=javafx.graphics/com.sun.glass.utils=ALL-UNNAMED',
            '--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED',
            '--add-exports=javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.reflect=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.beans=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.logging=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.glass.ui.monocle=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',
            '--add-opens=javafx.graphics/javafx.scene.image=ALL-UNNAMED',
            '--add-opens=javafx.base/com.sun.javafx.reflect=ALL-UNNAMED',
            '--add-opens=javafx.base/com.sun.javafx.beans=ALL-UNNAMED',
            '--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED',
            '--add-opens=javafx.base/com.sun.javafx.logging=ALL-UNNAMED',
            '--add-opens=javafx.base/javafx.beans=ALL-UNNAMED',
            '--add-opens=javafx.base/javafx.beans.property=ALL-UNNAMED',
            '--add-opens=javafx.base/javafx.collections=ALL-UNNAMED',

            '-Djava.awt.headless=false',
            '-Dtestfx.robot=glass',
            '-Dtestfx.headless=true',
            '-Dprism.order=sw',
            '-Dprism.text=t2k',
            '-Dglass.platform=Monocle',
            '-Dmonocle.platform=Headless',
            '-Djdk.gtk.version=2',
            '-Dprism.verbose=true'
    ]

    systemProperty 'testfx.setup.timeout', '60000'

    if (System.getenv("CI")) {
        systemProperty 'java.awt.headless', 'false'
        systemProperty 'testfx.headless', 'true'
        systemProperty 'prism.order', 'sw'
    }

    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat 'full'
    }
}

dependencies {
    api project(path: ':music-commons-core')
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-javafx'

    implementation 'com.google.guava:guava:33.5.0-jre'
    implementation 'net.jthink:jaudiotagger:3.0.1'
    implementation 'net.transgressoft:transgressoft-commons-core:1.5.0'
    implementation 'org.openjfx:javafx-controls:25'

    testApi project(path: ':music-commons-fx-test')
    testImplementation(platform('org.junit:junit-bom:6.0.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation "io.kotest:kotest-assertions-json:$kotestVersion"
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-property:$kotestVersion"
    testImplementation 'io.mockk:mockk:1.14.6'
    testImplementation 'org.testfx:testfx-core:4.0.18'
    testImplementation 'org.testfx:testfx-junit5:4.0.18'
    testImplementation 'org.testfx:openjfx-monocle:17.0.10'
}